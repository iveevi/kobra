default_compiler: nvcc
default_standard: c++17

definitions:
  - kobra_source: 'source/app.cpp,
    source/backend.cpp,
    source/bvh.cpp,
    source/capture.cpp,
    source/ecs.cpp,
    source/extensions.cpp,
    source/formats.cpp,
    source/io/event.cpp,
    source/layers/raster.cpp,
    source/layers/raytracer.cpp,
    source/logger.cpp,
    source/material.cpp,
    source/mesh.cpp,
    source/renderer.cpp,
    source/scene.cpp,
    source/texture_manager.cpp,
    source/timer.cpp,
    source/vertex.cpp'
  - tinyfd_source: 'thirdparty/tinyfiledialogs/tinyfiledialogs.c'
  - glslang_source: 'thirdparty/glslang/SPIRV/GlslangToSpv.cpp,
    thirdparty/glslang/StandAlone/ResourceLimits.cpp'
  - includes: 'thirdparty,
    thirdparty/freetype/include,
    thirdparty/glm,
    thirdparty/imgui,
    thirdparty/assimp/include,
    thirdparty/tinyfiledialogs'
  - libs: 'glfw,
    vulkan,
    assimp,
    pthread,
    avcodec,
    avformat,
    avutil,
    freetype,
    glslang,
    SPIRV,
    OSDependent,
    OGLCompiler'

# TODO: compile glslang into shader library berfore any of the next steps
# i.e. prebuild section

builds:
  - kobra:
    - sources: main.cpp, kobra_source, tinyfd_source, glslang_source
    - idirs: includes
    - flags: '-std=c++17'
    - libraries: libs
  - kobra_release:
    - sources: main.cpp, kobra_source, tinyfd_source, glslang_source
    - idirs: includes
    - flags: '-O3 -std=c++17'
    - libraries: libs
  - kobra_debug:
    - sources: main.cpp, kobra_source, tinyfd_source, glslang_source
    - idirs: includes
    - libraries: libs
    - flags: '-std=c++17 -g'
  - kobra_wall:
    - sources: main.cpp, kobra_source, tinyfd_source, glslang_source
    - idirs: includes
    - libraries: libs
    - flags: '-std=c++17 -Wall -Werror'
  - experimental_normal:
    - sources: experimental/main.cpp, kobra_source
    - idirs: includes
    - flags: '-O3 -std=c++17'
    - libraries: libs
  - experimental_debug:
    - sources: experimental/main.cpp, kobra_source
    - idirs: includes
    - flags: '-std=c++17 -g'
    - libraries: libs

targets:
  - kobra:
    - modes: 'gdb, wall, release'
    - builds:
      - default: kobra
      - gdb: kobra_debug
      - wall: kobra_wall
      - release: kobra_release
    - postbuilds:
      - default: 'cd shaders && ./compile.sh && cd .. && {}'
      - gdb: 'gdb {}'
      - wall: '{}'
  - experimental:
    - modes: 'gdb'
    - builds:
      - default: experimental_normal
      - gdb: experimental_debug
    - postbuilds:
      - default: '{}'
      - gdb: 'gdb {}'
